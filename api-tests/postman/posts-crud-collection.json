{
	"info": {
		"_postman_id": "a5ec140c-fb8e-47a6-b406-29aee65519b7",
		"name": "Posts CRUD Example",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39748571",
		"_collection_link": "https://middleware-5906.postman.co/workspace/7acd1039-e24b-4fcc-8ded-b9c4cc49af22/collection/39748571-a5ec140c-fb8e-47a6-b406-29aee65519b7?action=share&source=collection_link&creator=39748571"
	},
	"item": [
		{
			"name": "GET all posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => pm.response.to.have.status(200));",
							"pm.test(\"Response is array\", () => pm.expect(pm.response.json()).to.be.an(\"array\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/posts",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST new post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 201\", () => pm.response.to.have.status(201));",
							"let post = pm.response.json();",
							"pm.test(\"Title matches\", () => pm.expect(post.title).to.eql(JSON.parse(pm.request.body.raw).title));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"title\": \"fo123o\", \"body\": \"ba123r\", \"userId\": 100 }"
				},
				"url": {
					"raw": "{{base_url}}/posts",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET post by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => pm.response.to.have.status(200));",
							"pm.test(\"Correct ID\", () => pm.expect(pm.response.json().id).to.eql(1));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/posts/{{newPostId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"posts",
						"{{newPostId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT post by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"pm.test(\"Body updated\", () => pm.expect(response.body).to.include(\"Updated\"));",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"id\": \"{{newPostId}}\", \"title\": \"Updated Title\", \"body\": \"Updated body\", \"userId\": 1 }"
				},
				"url": {
					"raw": "{{base_url}}/posts/{{newPostId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"posts",
						"{{newPostId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE post by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200 or 204\", () => pm.expect(pm.response.code).to.be.oneOf([200,204]));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/posts/{{newPostId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"posts",
						"{{newPostId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://jsonplaceholder.typicode.com"
		},
		{
			"key": "newPostId",
			"value": "1",
			"type": "string"
		}
	]
}